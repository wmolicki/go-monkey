let map = fn(arr, f) {
    let iter = fn(arr, accumulated) {
        if (len(arr) == 0) {
          return accumulated
        }
        return iter(rest(arr), push(accumulated, f(arr)));
      }
    return iter(arr, [])
};

let reduce = fn(arr, initial, f) {
  let iter = fn(arr, result) {
    if (len(arr) == 0) {
      return result;
    }
    return iter(rest(arr), f(result, first(arr)));
  }
  return iter(arr, initial);
};


let sum = fn(arr) {
  return reduce(arr, 0, fn(initial, el) { return initial + el; });
}

let fact = fn(n) {
  if (n < 2) {
    return 1
  }
  return n * fact(n-1)
}

let fib = fn(n) {
  if (n < 3) {
    return 1
  }
  return fib(n-1) + fib(n-2)
}

let m = puts(sum([1,2,3,4]));
let m = puts(fact(5))
let m = puts(fib(35))